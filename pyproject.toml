[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "liteagent"
version = "0.1.0"
description = "A lightweight agent framework using official provider client libraries"
readme = "README.md"
authors = [
    {name = "LiteAgent Team", email = "info@liteagent.org"}
]
license = {text = "Internal, not decided yet"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
providers = [
    "openai>=1.0.0",
    "anthropic>=0.50.0", 
    "groq>=0.30.0",
    "mistralai>=1.0.0",
    "ollama>=0.4.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-xdist>=3.3.1",
    "coverage>=7.3.1",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/liteagent"
"Bug Tracker" = "https://github.com/yourusername/liteagent/issues"
"Documentation" = "https://github.com/yourusername/liteagent#readme"

[project.scripts]
liteagent = "liteagent.__main__:main"

[tool.setuptools]
packages = ["liteagent"]

[tool.setuptools.package-data]
liteagent = ["model_capabilities.json"]

[tool.pytest.ini_options]
addopts = "-v --cov=liteagent --cov-report=term --cov-report=html:tests/.coverage_files --cache-clear"
testpaths = ["tests/unit"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests that might need external services",
    "optional: marks tests as optional",
    "longrun: marks tests as very long-running tests that should be run explicitly"
] 
log_cli = "true"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
